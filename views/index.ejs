<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Task Manager</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: '#6366f1',
            'primary-dark': '#4f46e5',
            dark: {
              900: '#0f172a',
              800: '#1e293b',
              700: '#334155',
            }
          },
          fontFamily: {
            'poppins': ['Poppins', 'sans-serif']
          }
        }
      }
    }
  </script>
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
      min-height: 100vh;
    }
    
    .task-card {
      transition: all 0.3s ease;
      border-left: 4px solid #6366f1;
    }
    
    .task-card:hover {
      transform: translateY(-3px);
      box-shadow: 0 10px 20px rgba(0,0,0,0.15);
    }
    
    .pulse {
      animation: pulse 2s infinite;
    }
    
    .stat-card {
      transition: all 0.3s ease;
    }
    
    .stat-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 25px rgba(0,0,0,0.2);
    }
    
    @keyframes pulse {
      0% { box-shadow: 0 0 0 0 rgba(99, 102, 241, 0.5); }
      70% { box-shadow: 0 0 0 10px rgba(99, 102, 241, 0); }
      100% { box-shadow: 0 0 0 0 rgba(99, 102, 241, 0); }
    }
    
    .progress-bar {
      transition: width 0.5s ease-in-out;
    }
  </style>
</head>
<body class="min-h-screen text-white">

  <div class="main w-full min-h-screen px-4 py-8 max-w-4xl mx-auto">
    <!-- Header -->
    <header class="text-center mb-12">
      <h1 class="text-4xl md:text-5xl font-bold mb-3 bg-gradient-to-r from-blue-400 to-indigo-600 bg-clip-text text-transparent">
        <i class="fas fa-tasks mr-3"></i>Task Manager
      </h1>
      <p class="text-slate-400 max-w-md mx-auto">Organize your work and boost your productivity</p>
    </header>
    
    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Form Section -->
      <div class="form w-full lg:w-2/5">
        <div class="bg-dark-800 rounded-2xl p-6 shadow-xl">
          <h2 class="text-xl font-semibold mb-6 flex items-center">
            <i class="fas fa-plus-circle mr-2 text-primary"></i> Add New Task
          </h2>
          <form action="/create" method="post" class="space-y-4">
            <div>
              <label class="block text-sm font-medium text-slate-400 mb-1">Task Title</label>
              <input 
                class="block w-full rounded-xl px-5 py-3 bg-dark-700 outline-none focus:ring-2 focus:ring-primary placeholder-slate-500"
                type="text" 
                placeholder="Buy groceries, Finish report..." 
                name="title" 
                required
              />
            </div>
            <div>
              <label class="block text-sm font-medium text-slate-400 mb-1">Task Details</label>
              <textarea 
                class="block w-full rounded-xl px-5 py-3 bg-dark-700 outline-none focus:ring-2 focus:ring-primary resize-none placeholder-slate-500 min-h-[120px]" 
                placeholder="Write your task details here..."
                name="task_details"
                required></textarea>
            </div>
            <button 
              class="w-full bg-gradient-to-r from-primary to-primary-dark px-5 py-3 rounded-xl font-semibold hover:opacity-90 transition-all duration-200 flex items-center justify-center pulse"
              type="submit"
            >
              <i class="fas fa-plus mr-2"></i> Add Task
            </button>
          </form>
        </div>
        
        <!-- Stats Section - Fixed and Enhanced -->
        <div class="bg-dark-800 rounded-2xl p-6 mt-6 shadow-xl">
          <h2 class="text-xl font-semibold mb-4 flex items-center">
            <i class="fas fa-chart-pie mr-2 text-amber-500"></i> Your Progress
          </h2>
          <div class="grid grid-cols-3 gap-4 text-center">
            <div class="stat-card bg-dark-700 p-4 rounded-xl hover:bg-indigo-500/10">
              <div class="text-2xl font-bold text-indigo-400"><%= totalTasks %></div>
              <div class="text-xs text-slate-400 mt-1">Total Tasks</div>
            </div>
            <div class="stat-card bg-dark-700 p-4 rounded-xl hover:bg-emerald-500/10">
              <div class="text-2xl font-bold text-emerald-400"><%= completed %></div>
              <div class="text-xs text-slate-400 mt-1">Completed</div>
            </div>
            <div class="stat-card bg-dark-700 p-4 rounded-xl hover:bg-rose-500/10">
              <div class="text-2xl font-bold text-rose-400"><%= pending %></div>
              <div class="text-xs text-slate-400 mt-1">Pending</div>
            </div>
          </div>
          <div class="mt-4 pt-4 border-t border-dark-700">
            <div class="flex items-center justify-between text-sm mb-1">
              <span class="text-slate-400">Completion Rate</span>
              <span class="font-medium"><%= completionRate %>%</span>
            </div>
            <div class="w-full bg-dark-700 rounded-full h-2">
              <div class="progress-bar bg-gradient-to-r from-emerald-500 to-emerald-600 h-2 rounded-full" style="width: <%= completionRate %>%"></div>
            </div>
          </div>
        </div>
      </div>

      <!-- Task Section -->
      <div class="tasks w-full lg:w-3/5">
        <div class="bg-dark-800 rounded-2xl p-6 shadow-xl h-full">
          <div class="flex justify-between items-center mb-6">
            <h2 class="text-xl font-semibold flex items-center">
              <i class="fas fa-list-check mr-2 text-purple-500"></i> Your Tasks
            </h2>
            <div class="flex space-x-2">
              <button class="px-3 py-1 bg-dark-700 rounded-lg text-sm hover:bg-dark-600 transition-colors">
                <i class="fas fa-sort mr-1"></i> Sort
              </button>
              <button class="px-3 py-1 bg-dark-700 rounded-lg text-sm hover:bg-dark-600 transition-colors">
                <i class="fas fa-filter mr-1"></i> Filter
              </button>
            </div>
          </div>

          <div class="space-y-4">
            <% if (files.length > 0) { %>
              <% files.forEach((file) => { %>
                <div class="task-card bg-dark-700 p-5 rounded-xl transition-all duration-300 hover:bg-dark-600">
                  <div class="flex items-start">
                    <div class="mt-1 mr-3">
                      <i class="fas fa-circle text-xs text-indigo-500"></i>
                    </div>
                    <div class="flex-1">
                      <h3 class="font-semibold text-lg mb-1"><%= file %></h3>
                      <p class="text-slate-400 text-sm mb-3">Created: <%= new Date().toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) %></p>
                      <div class="flex justify-between items-center">
                        <a class="text-primary hover:text-indigo-300 inline-flex items-center transition-colors" href="/files/<%= file %>">
                          <i class="fas fa-eye mr-2"></i> View Details
                        </a>
                        <div class="flex space-x-2">
                          <button class="w-8 h-8 rounded-full bg-dark-800 flex items-center justify-center hover:bg-emerald-500/20 text-emerald-400 hover:text-white transition-colors">
                            <i class="fas fa-check text-xs"></i>
                          </button>
                          <button class="w-8 h-8 rounded-full bg-dark-800 flex items-center justify-center hover:bg-rose-500/20 text-rose-400 hover:text-white transition-colors">
                            <i class="fas fa-trash text-xs"></i>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              <% }) %>
            <% } else { %>
              <div class="text-center py-12">
                <div class="inline-block p-5 bg-dark-700 rounded-full mb-4">
                  <i class="fas fa-inbox text-4xl text-indigo-500"></i>
                </div>
                <h3 class="text-xl font-medium mb-2">No tasks yet</h3>
                <p class="text-slate-500 max-w-md mx-auto">Add your first task to get started. You're going to be more productive than ever!</p>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Footer -->
    <footer class="mt-12 text-center text-slate-500 text-sm">
      <p>Â© 2023 Task Manager. All rights reserved. Designed with <i class="fas fa-heart text-rose-500"></i> for productive people</p>
    </footer>
  </div>
  
  <!-- JavaScript for dynamic interactions -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Add hover effects to stat cards
      const statCards = document.querySelectorAll('.stat-card');
      statCards.forEach(card => {
        card.addEventListener('mouseenter', () => {
          card.classList.add('transform', 'transition-all', 'duration-300');
        });
        
        card.addEventListener('mouseleave', () => {
          card.classList.remove('transform');
        });
      });
      
      // Add task completion functionality
      document.querySelectorAll('.task-card .fa-check').forEach(icon => {
        icon.closest('button').addEventListener('click', function(e) {
          e.preventDefault();
          const taskCard = this.closest('.task-card');
          const circleIcon = taskCard.querySelector('.fa-circle');
          
          // Toggle task completion state
          if (circleIcon.classList.contains('text-indigo-500')) {
            circleIcon.classList.remove('text-indigo-500');
            circleIcon.classList.add('text-emerald-500');
            this.classList.add('bg-emerald-500', 'text-white');
            this.classList.remove('bg-dark-800', 'text-emerald-400');
          } else {
            circleIcon.classList.remove('text-emerald-500');
            circleIcon.classList.add('text-indigo-500');
            this.classList.remove('bg-emerald-500', 'text-white');
            this.classList.add('bg-dark-800', 'text-emerald-400');
          }
          
          // Update stats (in a real app, this would be an API call)
          updateStats();
        });
      });
      
      // Function to update stats (simulated)
      function updateStats() {
        // In a real app, you would fetch updated stats from your backend
        const totalEl = document.querySelector('.stat-card:nth-child(1) .text-2xl');
        const completedEl = document.querySelector('.stat-card:nth-child(2) .text-2xl');
        const pendingEl = document.querySelector('.stat-card:nth-child(3) .text-2xl');
        const rateEl = document.querySelector('.font-medium');
        const progressBar = document.querySelector('.progress-bar');
        
        // Simulate updating the stats
        const total = parseInt(totalEl.textContent);
        let completed = parseInt(completedEl.textContent);
        let pending = parseInt(pendingEl.textContent);
        
        // Toggle between completed and pending
        if (completed < total) {
          completed++;
          pending--;
        } else {
          completed--;
          pending++;
        }
        
        const completionRate = Math.round((completed / total) * 100);
        
        // Update UI
        completedEl.textContent = completed;
        pendingEl.textContent = pending;
        rateEl.textContent = completionRate + '%';
        progressBar.style.width = completionRate + '%';
      }
    });
  </script>
</body>
</html>